expression
         ::= (const | path | variableName) ("," manipulation)*

/* Variables */
variable ::= var variableName "=" (expression | path)
pathVariable ::= variableName "[" [0-9]+ "]"
variableName ::= [a-fA-F]+

/* Manipulations */
manipulation
         ::= analogous
           | compliment
analogous
         ::= (A|a) range?
compliment
         ::= C
           | c
range    ::= '-'? [0-9]+ ("." [0-9]+)?

/* Constants */
const    ::= '(' ( rgb | rgba ) ')'
rgba     ::= 'rgba(' colourValue ',' colourValue ',' colourValue ',' colourValue ')'
rgb      ::= 'rgb(' colourValue ',' colourValue ',' colourValue ')'
hex      ::= '#'? hexit hexit hexit ( hexit hexit )?
hexit    ::= [0-9a-fA-F]
colourValue
         ::= ( [1-9] | '1' [0-9] | '2' [0-4] )? [0-9]
           | '25' [0-5]
rgba     ::= 'rgba(' colourValue ',' colourValue ',' colourValue ',' colourValue ')'

/* Pathing */
path     ::= "[" (expression) ("," expression)* "]"
rotate   ::= expression ".rotate(" range ")"
translate
         ::= expression ".translate(" colourValue "," colourValue ")"
scale    ::= expression ".scale(" colourValue ")"
